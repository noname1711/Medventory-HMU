import React, { useEffect, useState } from "react";
import "./ExportEquipment.css";

export default function ExportEquipment({ equipmentData, onExport }) {
  const [department, setDepartment] = useState("");
  const [status, setStatus] = useState("");
  const [dateFrom, setDateFrom] = useState("");
  const [dateTo, setDateTo] = useState("");
  const [previewData, setPreviewData] = useState([]);

  useEffect(() => {
    updatePreview();
    // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [department, status, dateFrom, dateTo, equipmentData]);

  function getFiltered() {
    let filtered = [...equipmentData];
    if (department) filtered = filtered.filter((e) => e.department === department);
    if (status) filtered = filtered.filter((e) => e.status === status);
    if (dateFrom) filtered = filtered.filter((e) => e.date >= dateFrom);
    if (dateTo) filtered = filtered.filter((e) => e.date <= dateTo);
    return filtered;
  }

  function updatePreview() {
    setPreviewData(getFiltered());
  }

  function previewExport() {
    setPreviewData(getFiltered());
    const previewDiv = document.getElementById("export-preview");
    if (previewDiv) previewDiv.classList.remove("hidden");
  }

  // ‚ö° Kh√¥ng th√¥ng b√°o ·ªü ƒë√¢y ‚Äî ch·ªâ g·ªçi onExport
  function exportFilteredData() {
    const data = getFiltered();
    if (data.length === 0) {
      onExport(null, null, "empty"); // G·ª≠i t√≠n hi·ªáu r·ªóng
      return;
    }
    const headers = [
      "M√£ v·∫≠t t∆∞",
      "T√™n v·∫≠t t∆∞",
      "Khoa ph√≤ng",
      "Tr·∫°ng th√°i",
      "Ng√†y mua",
      "Gi√° tr·ªã (VNƒê)",
    ];
    const csv = [
      headers.join(","),
      ...data.map((eq) =>
        [eq.code, `"${eq.name}"`, `"${eq.department}"`, `"${eq.status}"`, eq.date, eq.value].join(",")
      ),
    ].join("\n");

    // G·ª≠i d·ªØ li·ªáu sang Dashboard ƒë·ªÉ x·ª≠ l√Ω Swal + t·∫£i file
    onExport(csv, "danh-sach-vat-tu.csv", "text/csv");
  }

  function quickExport(type) {
    setDepartment("");
    setStatus("");
    setDateFrom("");
    setDateTo("");
    if (type === "maintenance") setStatus("C·∫ßn b·∫£o tr√¨");
    if (type === "broken") setStatus("H·ªèng h√≥c");
    if (type === "monthly") {
      const today = new Date();
      const firstDay = new Date(today.getFullYear(), today.getMonth(), 1);
      const lastDay = new Date(today.getFullYear(), today.getMonth() + 1, 0);
      setDateFrom(firstDay.toISOString().split("T")[0]);
      setDateTo(lastDay.toISOString().split("T")[0]);
    }
    setTimeout(() => {
      updatePreview();
      previewExport();
    }, 0);
  }

  const stats = {
    total: previewData.length,
    working: previewData.filter((eq) => eq.status === "Ho·∫°t ƒë·ªông t·ªët").length,
    maintenance: previewData.filter((eq) => eq.status === "C·∫ßn b·∫£o tr√¨").length,
    broken: previewData.filter((eq) => eq.status === "H·ªèng h√≥c").length,
  };

  return (
    <div className="ee-root card">
      <h3>Xu·∫•t d·ªØ li·ªáu V·∫≠t t∆∞ Y t·∫ø</h3>
      <div className="ee-grid">
        <div className="ee-filters">
          <h4>T√πy ch·ªçn xu·∫•t d·ªØ li·ªáu</h4>

          <div className="ee-field">
            <label>L·ªçc theo khoa ph√≤ng</label>
            <select value={department} onChange={(e) => setDepartment(e.target.value)}>
              <option value="">T·∫•t c·∫£ khoa ph√≤ng</option>
              <option value="Khoa N·ªôi">Khoa N·ªôi</option>
              <option value="Khoa Ngo·∫°i">Khoa Ngo·∫°i</option>
              <option value="Khoa S·∫£n">Khoa S·∫£n</option>
              <option value="Khoa Nhi">Khoa Nhi</option>
              <option value="Khoa C·∫•p c·ª©u">Khoa C·∫•p c·ª©u</option>
              <option value="Khoa X√©t nghi·ªám">Khoa X√©t nghi·ªám</option>
            </select>
          </div>

          <div className="ee-field">
            <label>L·ªçc theo tr·∫°ng th√°i</label>
            <select value={status} onChange={(e) => setStatus(e.target.value)}>
              <option value="">T·∫•t c·∫£ tr·∫°ng th√°i</option>
              <option value="Ho·∫°t ƒë·ªông t·ªët">Ho·∫°t ƒë·ªông t·ªët</option>
              <option value="C·∫ßn b·∫£o tr√¨">C·∫ßn b·∫£o tr√¨</option>
              <option value="H·ªèng h√≥c">H·ªèng h√≥c</option>
            </select>
          </div>

          <div className="ee-dates">
            <div>
              <label>T·ª´ ng√†y</label>
              <input type="date" value={dateFrom} onChange={(e) => setDateFrom(e.target.value)} />
            </div>
            <div>
              <label>ƒê·∫øn ng√†y</label>
              <input type="date" value={dateTo} onChange={(e) => setDateTo(e.target.value)} />
            </div>
          </div>

          <div className="ee-field">
            <label>ƒê·ªãnh d·∫°ng xu·∫•t</label>
            <div className="ee-radios">
              <label>
                <input type="radio" name="fmt" defaultChecked /> <span>üìä Excel (.xlsx)</span>
              </label>
              <label>
                <input type="radio" name="fmt" /> <span>üìÑ CSV (.csv)</span>
              </label>
              <label>
                <input type="radio" name="fmt" /> <span>üìã PDF (.pdf)</span>
              </label>
            </div>
          </div>

          <div className="ee-actions">
            <button className="btn primary" onClick={exportFilteredData}>
              üì§ Xu·∫•t d·ªØ li·ªáu
            </button>
          </div>
        </div>

        <div className="ee-stats">
          <h4>Th·ªëng k√™ d·ªØ li·ªáu xu·∫•t</h4>
          <div className="ee-statsbox">
            <div className="row">
              <span>T·ªïng s·ªë v·∫≠t t∆∞:</span>
              <span>{stats.total}</span>
            </div>
            <div className="row">
              <span>Ho·∫°t ƒë·ªông t·ªët:</span>
              <span className="green">{stats.working}</span>
            </div>
            <div className="row">
              <span>C·∫ßn b·∫£o tr√¨:</span>
              <span className="yellow">{stats.maintenance}</span>
            </div>
            <div className="row">
              <span>H·ªèng h√≥c:</span>
              <span className="red">{stats.broken}</span>
            </div>
          </div>

          <h5>M·∫´u xu·∫•t nhanh</h5>
          <div className="ee-quick">
            <button onClick={() => quickExport("all")}>üìä T·∫•t c·∫£ v·∫≠t t∆∞</button>
            <button onClick={() => quickExport("maintenance")}>‚ö†Ô∏è V·∫≠t t∆∞ c·∫ßn b·∫£o tr√¨</button>
            <button onClick={() => quickExport("broken")}>üîß V·∫≠t t∆∞ h·ªèng h√≥c</button>
            <button onClick={() => quickExport("monthly")}>üìÖ B√°o c√°o th√°ng n√†y</button>
          </div>
        </div>
      </div>

      <div id="export-preview" className={`ee-preview ${previewData.length ? "visible" : "hidden"}`}>
        <h4>Xem tr∆∞·ªõc d·ªØ li·ªáu xu·∫•t</h4>
        <div className="ee-preview-table">
          <table>
            <thead>
              <tr>
                <th>M√£ TB</th>
                <th>T√™n v·∫≠t t∆∞</th>
                <th>Khoa ph√≤ng</th>
                <th>Tr·∫°ng th√°i</th>
                <th>Ng√†y mua</th>
              </tr>
            </thead>
            <tbody>
              {previewData.length ? (
                previewData.map((eq) => (
                  <tr key={eq.id}>
                    <td>{eq.code}</td>
                    <td>{eq.name}</td>
                    <td>{eq.department}</td>
                    <td>
                      <span
                        className={`pill ${
                          eq.status === "Ho·∫°t ƒë·ªông t·ªët"
                            ? "g"
                            : eq.status === "C·∫ßn b·∫£o tr√¨"
                            ? "y"
                            : "r"
                        }`}
                      >
                        {eq.status}
                      </span>
                    </td>
                    <td>{eq.date}</td>
                  </tr>
                ))
              ) : (
                <tr>
                  <td colSpan="5" style={{ textAlign: "center", padding: 16 }}>
                    Kh√¥ng c√≥ d·ªØ li·ªáu
                  </td>
                </tr>
              )}
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}
