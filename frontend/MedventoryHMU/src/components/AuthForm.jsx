import { useState } from "react";
import { useNavigate } from "react-router-dom";
import toast from "react-hot-toast";
import "./AuthForm.css";

export default function AuthForm() {
  const [isLogin, setIsLogin] = useState(true);
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const navigate = useNavigate();

  const handleSubmit = (e) => {
    e.preventDefault();

    // Cho ph√©p admin ƒëƒÉng nh·∫≠p kh√¥ng c·∫ßn email th·∫≠t
    if (isLogin) {
      if (email === "admin" && password === "12345") {
        toast.success("Xin ch√†o Admin üëë");
        setTimeout(() => navigate("/admin"), 800);
        return;
      }

      // Ki·ªÉm tra email ng∆∞·ªùi d√πng th∆∞·ªùng
      if (!email.endsWith("@gmail.com")) {
        toast.error("Vui l√≤ng d√πng email @gmail.com ƒë·ªÉ ƒëƒÉng nh·∫≠p!");
        return;
      }

      toast.success("Ch√†o m·ª´ng ƒë·∫øn Medventory-HMU üëã");
      setTimeout(() => navigate("/dashboard"), 800);
    } else {
      // Ki·ªÉm tra email h·ª£p l·ªá khi ƒëƒÉng k√Ω
      if (!email.endsWith("@gmail.com")) {
        toast.error("Email ph·∫£i c√≥ ƒëu√¥i @gmail.com");
        return;
      }

      toast.success("ƒêƒÉng k√Ω th√†nh c√¥ng! Vui l√≤ng ƒëƒÉng nh·∫≠p ƒë·ªÉ ti·∫øp t·ª•c.");
      setIsLogin(true);
      setEmail("");
      setPassword("");
    }
  };

  return (
    <div className="auth-page">
      <div className="demo-badge">Medventory-HMU</div>

      <div className="auth-wrapper">
        <div className="auth-header">
          <div className="logo-circle">
            <img src="/logo.jpg" alt="HMU Logo" className="logo-img" />
          </div>
          <h1>HMU Medical</h1>
          <p>H·ªá th·ªëng qu·∫£n l√Ω v·∫≠t t∆∞ y t·∫ø</p>
          <p className="sub">B·ªánh vi·ªán ƒê·∫°i h·ªçc Y H√† N·ªôi</p>
        </div>

        <div className="form-container">
          <div className="tabs">
            <button
              className={isLogin ? "tab active" : "tab"}
              onClick={() => setIsLogin(true)}
            >
              ƒêƒÉng nh·∫≠p
            </button>
            <button
              className={!isLogin ? "tab active" : "tab"}
              onClick={() => setIsLogin(false)}
            >
              ƒêƒÉng k√Ω
            </button>
          </div>

          <form onSubmit={handleSubmit} className="auth-form">
            {!isLogin && (
              <>
                <input type="text" placeholder="H·ªç v√† t√™n" required />

                <div className="grid-2">
                  <input type="date" placeholder="Ng√†y sinh" required />
                  <select required>
                    <option value="">Ph√≤ng ban</option>
                    <option>Khoa Ngo·∫°i</option>
                    <option>Khoa N·ªôi</option>
                    <option>Khoa Nhi</option>
                    <option>Khoa S·∫£n</option>
                    <option>Khoa X√©t nghi·ªám</option>
                    <option>Kho V·∫≠t t∆∞</option>
                    <option>H√†nh ch√≠nh</option>
                  </select>
                </div>
              </>
            )}

            {/*N·∫øu l√† admin th√¨ cho ph√©p nh·∫≠p text th∆∞·ªùng, c√≤n ng∆∞·ªùi kh√°c th√¨ d√πng email */}
            <input
              type={email === "admin" ? "text" : "email"}
              placeholder={
                email === "admin" ? "T√†i kho·∫£n admin" : "Email @gmail.com"
              }
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              required
            />

            <input
              type="password"
              placeholder="M·∫≠t kh·∫©u"
              value={password}
              onChange={(e) => setPassword(e.target.value)}
              required
            />

            {!isLogin && (
              <>
                <input type="password" placeholder="X√°c nh·∫≠n m·∫≠t kh·∫©u" required />
                <select required>
                  <option value="">Ph√¢n quy·ªÅn</option>
                  <option>B√°c sƒ©</option>
                  <option>ƒêi·ªÅu d∆∞·ª°ng</option>
                  <option>K·ªπ thu·∫≠t vi√™n</option>
                  <option>Qu·∫£n l√Ω kho</option>
                  <option>Admin</option>
                </select>
              </>
            )}

            {isLogin && (
              <div className="remember-row">
                <label>
                  <input type="checkbox" /> Ghi nh·ªõ ƒëƒÉng nh·∫≠p
                </label>
                <a href="#" onClick={() => navigate("/forgot")}>
                  Qu√™n m·∫≠t kh·∫©u?
                </a>
              </div>
            )}

            <button type="submit" className="submit-btn">
              {isLogin ? "ƒêƒÉng nh·∫≠p" : "ƒêƒÉng k√Ω t√†i kho·∫£n"}
            </button>
          </form>

          <div className="footer">
            <small>Demo Version</small>
          </div>
        </div>
      </div>
    </div>
  );
}
